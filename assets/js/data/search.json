[ { "title": "Laboratorio para pentesting", "url": "/posts/laboratorio-ubuntu-docker-labs/", "categories": "Laboratorio, Docker", "tags": "Maquina virtual, VirtualBox, Ubuntu Server, Docker, Docker Engine, Docker Compose, DVWA, Juice Shop, WebGoat, WebWolf", "date": "2022-08-20 21:00:00 +0200", "snippet": "En el post de hoy vamos a crear un laboratorio de pentesting con el que podremos aprender diversas técnicas de hacking utilizando un entorno seguro. Para ello vamos a crear la máquina virtual ubuntu-docker-labs con VirtualBox e instalaremos en ella una distribución linux Ubuntu Server y varias aplicaciones web (todas ellas vulnerables), mediante la utilización de contenedores Docker.Por si se hubiese pasado por alto, quiero recalcar lo de utilizando un entorno seguro, ya que las prácticas de pentesting NO DEBEMOS realizarlas en páginas reales en producción, sobre todo si no somos propietarios de ellas ni tenemos permiso de los propietarios. Otra cuestión sería que nos hayan contratado para una auditoría, en cuyo caso habría que ceñirse a lo acordado con el cliente.Este proyecto tiene como finalidad aprender algunas de las técnicas que utilizan los malos (los ciberdelincuentes), conocer las vulnerabilidades más habituales y así, cuando hagamos una auditoría en un entorno real, poder detectar y corregir los posibles fallos de seguridad que encontremos en las aplicaciones web analizadas.Para hacer el proceso más sencillo, he decidido dividir el contenido en tres partes: Parte 1: Creación de la máquina virtual e instalación de Ubuntu Server Parte 2: Instalación de Docker Parte 3: Instalación de aplicaciones web vulnerables" }, { "title": "Laboratorio para pentesting (parte 3)", "url": "/posts/laboratorio-ubuntu-docker-labs-3/", "categories": "Laboratorio, Docker", "tags": "Maquina virtual, VirtualBox, Ubuntu Server, Docker, Docker Engine, Docker Compose, DVWA, Juice Shop, WebGoat, WebWolf", "date": "2022-08-19 21:00:00 +0200", "snippet": "En la segunda parte instalamos Docker en nuestra máquina virtual ubuntu-docker-labs para crear los contenedores con las aplicaciones de nuestro laboratorio.En esta tercera parte vamos a instalar por fin las aplicaciones con las que podremos practicar y formarnos en pentesting. Para ello vamos a crear cuatro contenedores de Docker, uno para cada una de las aplicaciones web: DVWA (Damn Vulnerable Web Application) (github) Juice Shop (github) WebGoat 7 (github) WebGoat 8 (github) + WebWolfVamos a necesitar lo siguiente: Archivos docker-compose.yml docker-composeInstalación de DVWA (Damn Vulnerable Web Application):Instalación de Juice Shop:Instalación de WebGoat 7:Instalación de WebGoat 8 + WebWolf:Al igual que en el final de la segunda parte, volver a crear una instantánea de la máquina virtual no es algo necesario para crear el laboratorio, pero sí que es recomendable realizarla. El proceso es el mismo con la diferencia que en este caso no la he creado con la máquina apagada:" }, { "title": "Laboratorio para pentesting (parte 2)", "url": "/posts/laboratorio-ubuntu-docker-labs-2/", "categories": "Laboratorio, Docker", "tags": "Maquina virtual, VirtualBox, Ubuntu Server, Docker, Docker Engine, Docker Compose", "date": "2022-08-18 21:00:00 +0200", "snippet": "En la primera parte empezamos a preparar nuestro laboratorio instalando linux en la máquina virtual ubuntu-docker-labs.En esta segunda parte vamos a instalar Docker (Docker Engine + Docker Compose), para poder crear los contenedores que almacenarán las distintas apliaciones de nuestro laboratorio, es decir, las aplicaciones con las que haremos nuestras prácticas de pentesting.Si no conoces lo que son los contenedores, o si no los has utilizado nunca, se podría decir que son algo similar a las máquinas virtuales, con la diferencia que una máquina virtual alberga un sistema totalmente independiente, y un contenedor depende del sistema operativo base donde se ejecuta el gestor de contenedores (en nuestro caso Docker). ¿Y qué tiene de bueno usar un contenedor? Pues que, para ejecutarse, requiere menos recursos que una máquina virtual, con lo que lanzar una aplicación será más rápido. Si quieres indagar más en las diferencias, échale una ojeada a esta web: Diferencia entre Contenedores y Máquinas VirtualesVolviendo a la instalación, vamos a necesitar lo siguiente: Docker Engine (doc) Docker Compose (doc)Aquí puedes ver el video con los pasos que debes seguir para instalar Docker en la máquina virtual ubuntu-docker-labs:Aunque este no sea un paso necesario para la instalación del laboratorio, sí que considero recomendable que hagamos una instantánea de nuestra máquina virtual, por si en algún momento queremos volver a este estado, no tener que reinstalar todo desde cero:" }, { "title": "Laboratorio para pentesting (parte 1)", "url": "/posts/laboratorio-ubuntu-docker-labs-1/", "categories": "Laboratorio, Docker", "tags": "Maquina virtual, VirtualBox, Ubuntu Server, Docker", "date": "2022-08-17 21:00:00 +0200", "snippet": "En esta primera parte vamos iniciar la creación de nuestro laboratorio para pentesting. Antes de nada, lo que haremos será crear la máquina virtual ubuntu-docker-labs con VirtualBox para luego instalar en ella la distribución de linux Ubuntu Server en su versión LTS (Long Term Support).Vamos a necesitar lo siguiente: VirtualBox (download) Linux Ubuntu Server LTS (download)Aunque ya lo he comentado en el post principal de este proyecto, me gustaría volver a aclarar que, las técnicas que podamos aprender con las aplicaciones de este laboratorio, sólo las deberemos poner en práctica en un entorno seguro. Por favor, si no lo has leído todavía, échale una ojeada antes de continuar (ver post).Aquí tienes el video con los pasos a seguir en esta primera parte:" }, { "title": "Problema de conexión con HackTheBox", "url": "/posts/problema-conexion-hackthebox/", "categories": "HackTheBox", "tags": "Problemas, Conexion", "date": "2022-07-18 21:00:00 +0200", "snippet": "Como sabes, para utilizar la plataforma HackTheBox se requieren 3 cosas: Una cuenta de usuario Una conexión a su VPN Lanzar la máquina que deseemos resolverDesde que he empezado a utilizar HackTheBox no he tenido ningún problema, o al menos no con los puntos 1 y 2: Respecto al usuario no hay mucho que decir. Una vez creado no debería haber ningún problema para conectar con él. La VPN: el único problema que tuve es que no ejecuté OpenVPN con permisos de superusuario, pero una vez ejecutado así, no ha habido nada que destacar. En cuanto a lanzar la máquina a resolver… Con las máquinas máquinas Tier 0 y Tier 1 del Starting Point no tuve ningún problema, pero sí con la máquina Archtype del Starting Point Tier 2. En este caso sí conectaba a la VPN, pero lanzar la máquina ha sido algo más complicado. Aunque creaba la instancia no conseguía establecer la conexión, se quedaba pensando durante demasiado tiempo y al final no le daba una ip a la máquina, con lo que no podía empezar a hacer nada con ella: Para intentar buscar una solución a este problema he seguido estos pasos: Verificar la conexión VPN. Compruebo que la conexión está establecida correctamente, mostrando el mensaje “2022-07-18 13:09:42 Initialization Sequence Completed” Reiniciar la conexión VPN. Aún estando conectada correctamente, creo que puede haber algún problema en la conexión, así que desconecto y vuelvo a lanzar la conexión VPN con HackTheBox, pero el problema persiste y la máquina sigue sin obtener ip. Pruebo a utilizar otro protocolo/servidor. Normalmente conecto a la VPN con el protocolo TCP del servidor europeo, salvo que de problemas y pruebe con UDP, que en alguna ocasión me ha servido para salir del paso. Sin embargo, en esta ocasión no ha funcionado ni con un protocolo ni con el otro, así que he probado a utlizar el servidor estadounidense, para ver si es que había algún problema con el servidor de Europa y, con este cambio, sí me ha permitido desplegar bien la máquina y seguir practicando. Espero que esta solución pueda serviros de utilidad. Tal vez sea algo simple, pero cuando la gente está empezando, toda ayuda es buena, y más si te permite continuar avanzando y no quedarte bloqueado.Un saludo" } ]
